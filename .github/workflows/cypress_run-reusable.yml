name: Cypress run reusable workflow

on: 
  workflow_call:
    inputs:
      CYPRESS_CONFIG_FILE:
        required: false
        type: string 
        default: ${{'cypress.json'}}
      CYPRESS_PROJECT_PATH: 
        required: false
        type: string
        default: ${{'.'}}      
      CYPRESS_REPORTER:
        required: false
        type: string
        default: ${{ 'spec' }}
      CYPRESS_BASE_URL:
        required: true
        type: string
      ADDITIONAL_OPTIONS: 
        required: false
        type: string
    secrets:
      CYPRESS_RECORD_KEY: 
        required: false
jobs:
  reusable-cypress_run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            ~/.npm
            ~/.cache/Cypress
          # An explicit key for restoring and saving the cache
          key: ${{runner.os}}-build-${{env.cache-name}}-${{hashFiles('**/package-lock.json')}}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: | # Optional
            ${{runner.os}}-build-${{env.cache-name}}-
      - name: Install dependencies
        run: npm ci
      - name: Install wait-on package
        run: npm i -g wait-on
      - name: Make Cypress wait until the server is up and available
        run: |
          if [ ! -z ${{inputs.CYPRESS_BASE_URL}} ]; then
              npm start --no-clipboard & wait-on $CYPRESS_BASE_URL
          else 
              echo "Variable CYPRESS_BASE_URL is MANDATORY. You must fill it !"
              exit 1
          fi
      - name: Run Cypress tests
        run: |
          if [ ! -z ${{secrets.CYPRESS_RECORD_KEY}} ]; then
              npx cypress run -P ${{inputs.CYPRESS_PROJECT_PATH}} -C ${{inputs.CYPRESS_CONFIG_FILE}} -r ${{inputs.CYPRESS_REPORTER}} ${{inputs.ADDITIONAL_OPTIONS}} --record
          else
              npx cypress run -P ${{inputs.CYPRESS_PROJECT_PATH}} -C ${{inputs.CYPRESS_CONFIG_FILE}} -r ${{inputs.CYPRESS_REPORTER}} ${{env.ADDITIONAL_OPTIONS}}
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          if: ${{secrets.CYPRESS_RECORD_KEY}}
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
            
      - name: Archive Cypress videos
        uses: actions/upload-artifact@v2
        if: always() 
        with:
          # Artifact name. Optional, default is artifact
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: error
          retention-days: 15
      - name: Archive Cypress screenshots when job failed
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          # Artifact name. Optional, default is artifact
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: error
          retention-days: 15